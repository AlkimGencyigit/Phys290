# -*- coding: utf-8 -*-
"""lightbotkernel_without_heightdiffernece.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1t3lARshTrqSDAJKjw9jcdhPSuj3H_OZq
"""

def lightbot(str , initial_matris, initial_pos=[9,0], initial_dir=[0,1]):
  #our str ^^<^@^^^@^^^@>^>@^^^@^^^@<^<@^^^@^^^@<^<@^@^@^@^@^@^@^<^^
  #initial matris will show us the state of the ground(wether a square is on 0 level or not/ blue or not )
  #in initial matris 0,1,2.. integers show the height
  #.3 means it is blue
  #.5 means it has been lit up so it is yellow

  matris = initial_matris
  pos = initial_pos
  dir = initial_dir

  dir_list = [[0,1],[1,0],[0,-1],[-1,0]]
  #0,1 right
  #1,0 down
  #0,-1 left
  #-1,0 up


  for i in range(len(str)):

    if str[i] == "@":

      #cheks if it is a blue-lightable- square
      if matris[pos[0], pos[1]] - int(matris[pos[0], pos[1]]) == 0.3:

        #lights the square
        matris[pos[0], pos[1]] = matris[pos[0], pos[1]] + 0.2


    if str[i] == "^":

      #makes sure we dont go out of the matris
      if pos[0] + dir[0] < 10  and pos[1] + dir[1] < 10:

        #makes sure the next square is the same height with current square
        if int(matris[pos[0],pos[1]]) == int(matris[pos[0] + dir[0],pos[1]+ dir[1]]):

          pos[0] += dir[0]
          pos[1] += dir[1]


    if str[i] == "<":

      dir = dir_list[(dir_list.index(dir) - 1) % 4]


    if str[i] == ">":

      dir = dir_list[(dir_list.index(dir) + 1) % 4]


    if str[i] == "*":

      #makes sure we dont go out of the matris
      if pos[0] < 9:

        pos[0] += dir[0]

      if pos[1] < 9:

        pos[1] += dir[1]

  return [matris, pos, dir]